<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<mvc:annotation-driven />

	<context:component-scan base-package="com.study" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/gfilelist/**" location="file:///C:/mp/file/" />


	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Root Context: defines shared resources visible to all other web components -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:config/db.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.user}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean>

	<!-- mybatis (sqlSessionFactory) -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="configLocation" value="classpath:mybatis-config.xml" />
	</beans:bean>

	<!-- mybatis (sqlSessionTemplate) -->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory" />
	</beans:bean>

	<beans:bean id="AES256Util" class="com.study.component.AES256Util">
		<beans:constructor-arg>
			<beans:value>1111111111111111</beans:value> <!-- 16자리로 제한 -->
		</beans:constructor-arg>
	</beans:bean>

	<!-- MultipartResolver 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000" />
		<beans:property name="maxInMemorySize" value="100000000" />
	</beans:bean>



	<!-- 캐시애노테이션 자동스캔설정 -->
	<cache:annotation-driven />
	<!-- 캐시매니저 선언 -->
	<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache" />
	<!-- 캐시설정을위한별도설정파일 선언 -->
	<beans:bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml" />

	<!-- 트랜잭션 설정 -->
	<!-- 특정 package만을 scan만 한다. -->
	<context:component-scan base-package="com.study.*" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

	<tx:annotation-driven
		transaction-manager="txManager" />

	<beans:bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 이 이름으로 시작하는 method를 트랙잭션으로 설정함 -->
			<!-- 어디에 있는 메서드인지는 config 태그에서 설정 -->
			<tx:method name="insert*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="delete*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="update*" rollback-for="Exception" propagation="REQUIRED" isolation="READ_COMMITTED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut expression="execution(* com.study.service..*ServiceImpl.*(..))" id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" id="transactionAdvisor" />
	</aop:config>

</beans:beans>